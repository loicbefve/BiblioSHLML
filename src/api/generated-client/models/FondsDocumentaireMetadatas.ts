/* tslint:disable */
/* eslint-disable */
/**
 * Biblio API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FondsDocumentaireMetadatas
 */
export interface FondsDocumentaireMetadatas {
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    n_carton?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    fonds?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    type_de_document?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    auteur?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    auteur_bis?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    titre?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    couverture?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    langue?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    edition?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    datation?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    contenu?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    etat?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    ancien_proprietaire?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    notes?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    don?: string;
    /**
     * 
     * @type {string}
     * @memberof FondsDocumentaireMetadatas
     */
    emplacement_initial_dans_la_bibliotheque?: string;
}

/**
 * Check if a given object implements the FondsDocumentaireMetadatas interface.
 */
export function instanceOfFondsDocumentaireMetadatas(value: object): value is FondsDocumentaireMetadatas {
    return true;
}

export function FondsDocumentaireMetadatasFromJSON(json: any): FondsDocumentaireMetadatas {
    return FondsDocumentaireMetadatasFromJSONTyped(json, false);
}

export function FondsDocumentaireMetadatasFromJSONTyped(json: any, ignoreDiscriminator: boolean): FondsDocumentaireMetadatas {
    if (json == null) {
        return json;
    }
    return {
        
        'n_carton': json['n_carton'] == null ? undefined : json['n_carton'],
        'fonds': json['fonds'] == null ? undefined : json['fonds'],
        'type_de_document': json['type_de_document'] == null ? undefined : json['type_de_document'],
        'auteur': json['auteur'] == null ? undefined : json['auteur'],
        'auteur_bis': json['auteur_bis'] == null ? undefined : json['auteur_bis'],
        'titre': json['titre'] == null ? undefined : json['titre'],
        'couverture': json['couverture'] == null ? undefined : json['couverture'],
        'langue': json['langue'] == null ? undefined : json['langue'],
        'edition': json['edition'] == null ? undefined : json['edition'],
        'datation': json['datation'] == null ? undefined : json['datation'],
        'contenu': json['contenu'] == null ? undefined : json['contenu'],
        'etat': json['etat'] == null ? undefined : json['etat'],
        'ancien_proprietaire': json['ancien_proprietaire'] == null ? undefined : json['ancien_proprietaire'],
        'notes': json['notes'] == null ? undefined : json['notes'],
        'don': json['don'] == null ? undefined : json['don'],
        'emplacement_initial_dans_la_bibliotheque': json['emplacement_initial_dans_la_bibliotheque'] == null ? undefined : json['emplacement_initial_dans_la_bibliotheque'],
    };
}

  export function FondsDocumentaireMetadatasToJSON(json: any): FondsDocumentaireMetadatas {
      return FondsDocumentaireMetadatasToJSONTyped(json, false);
  }

  export function FondsDocumentaireMetadatasToJSONTyped(value?: FondsDocumentaireMetadatas | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'n_carton': value['n_carton'],
        'fonds': value['fonds'],
        'type_de_document': value['type_de_document'],
        'auteur': value['auteur'],
        'auteur_bis': value['auteur_bis'],
        'titre': value['titre'],
        'couverture': value['couverture'],
        'langue': value['langue'],
        'edition': value['edition'],
        'datation': value['datation'],
        'contenu': value['contenu'],
        'etat': value['etat'],
        'ancien_proprietaire': value['ancien_proprietaire'],
        'notes': value['notes'],
        'don': value['don'],
        'emplacement_initial_dans_la_bibliotheque': value['emplacement_initial_dans_la_bibliotheque'],
    };
}

